<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[プログラミングの話]]></title>
  <link href="http://shouhei.github.io/atom.xml" rel="self"/>
  <link href="http://shouhei.github.io/"/>
  <updated>2014-12-30T18:51:50+09:00</updated>
  <id>http://shouhei.github.io/</id>
  <author>
    <name><![CDATA[Shouhei Yamaguchi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[echoの挙動]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/30/echo/"/>
    
    <updated>2014-12-30T18:14:38+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/30/echo</id>
    
    <content type="html"><![CDATA[<h1>事の発端</h1>

<p><a href="http://www.amazon.co.jp/%E3%81%B5%E3%81%A4%E3%81%86%E3%81%AELinux%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-Linux%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E3%81%8B%E3%82%89%E5%AD%A6%E3%81%B9%E3%82%8Bgcc%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%AE%E7%8E%8B%E9%81%93-%E9%9D%92%E6%9C%A8-%E5%B3%B0%E9%83%8E/dp/4797328355/">ふつうのLinuxプログラミング Linuxの仕組みから学べるgccプログラミングの王道</a></p>

<p>以上の本に&#8221;\007&#8221;って標準出力すると文字コード由来でベルが鳴ると書いてあった。</p>

<p>書いてあるなら試すしか無い。</p>

<p>普段から利用しているiTermを開いて</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "\007"</span></code></pre></td></tr></table></div></figure>


<p>ベルが鳴る。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "\008"</span></code></pre></td></tr></table></div></figure>


<p>8と出力</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "\009"</span></code></pre></td></tr></table></div></figure>


<p>9と出力</p>

<p>変な気がする。</p>

<h1>問題点</h1>

<p><a href="http://www.degraeve.com/reference/asciitable.php">ここ</a>に沿って考えると、Aとか、Bとかが表現されるはず。</p>

<p>少なくとも、普通に8とか9とかは違う気がする。</p>

<h1>検証</h1>

<div><script src='https://gist.github.com/66213014bd9a229f88f9.js'></script>
<noscript><pre><code>use strict;
use warnings;

for(my $i =0; $i &lt; 100; $i++){
    my $str = sprintf(&quot;\&quot;\\%03d\&quot;\n&quot;,$i);
    system(&quot;echo $str&quot;);
}</code></pre></noscript></div>


<p>以上のようなスクリプトを作成し走らせた。</p>

<p>結果は両方共以下のとおり。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>
</span><span class='line'>!
</span><span class='line'>"
</span><span class='line'>#
</span><span class='line'>$
</span><span class='line'>%
</span><span class='line'>&
</span><span class='line'>'
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>(
</span><span class='line'>)
</span><span class='line'>*
</span><span class='line'>+
</span><span class='line'>,
</span><span class='line'>-
</span><span class='line'>.
</span><span class='line'>/
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>0
</span><span class='line'>1
</span><span class='line'>2
</span><span class='line'>3
</span><span class='line'>4
</span><span class='line'>5
</span><span class='line'>6
</span><span class='line'>7
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>:
</span><span class='line'>;
</span><span class='line'>&lt;
</span><span class='line'>=
</span><span class='line'>&gt;
</span><span class='line'>?
</span><span class='line'>8
</span><span class='line'>9
</span><span class='line'>80
</span><span class='line'>81
</span><span class='line'>82
</span><span class='line'>83
</span><span class='line'>84
</span><span class='line'>85
</span><span class='line'>86
</span><span class='line'>87
</span><span class='line'>88
</span><span class='line'>89
</span><span class='line'>90
</span><span class='line'>91
</span><span class='line'>92
</span><span class='line'>93
</span><span class='line'>94
</span><span class='line'>95
</span><span class='line'>96
</span><span class='line'>97
</span><span class='line'>98
</span><span class='line'>99
</span></code></pre></td></tr></table></div></figure>


<p>途中でアルファベットとか出てきていいと思うのに、なんか違う気がする。</p>

<h1>結論</h1>

<p>echo コマンドの使い方の問題だった。</p>

<p><a href="http://itdoc.hitachi.co.jp/manuals/3021/3021313320/JPAS0374.HTM">echoコマンド（引数で指定した内容を標準出力に出力する） </a></p>

<p>こんなことで日立にお世話になるとは思っていなかったけれど。</p>

<p>要するに、echoコマンドの使い方的には8進数か16進数を期待しているので、gistに上げたプログラムは自分の期待通りにはなりません。</p>

<p>自分が期待していた動きをするスクリプトは以下。実行結果は割愛</p>

<div><script src='https://gist.github.com/b0d98f303627368bcb5d.js'></script>
<noscript><pre><code>use strict;
use warnings;

for(my $i =0; $i &lt; 100; $i++){
    my $str = sprintf(&quot;\&quot;\\%04o\&quot;\n&quot;,$i);
    system(&quot;echo $str&quot;);
}</code></pre></noscript></div>


<p>あと</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "\007"</span></code></pre></td></tr></table></div></figure>


<p>でベルがなるのは</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>注※1
</span><span class='line'>
</span><span class='line'>    指定したASCIIコード文字が1桁または2桁の場合，前に0を付けて3桁で指定しても，同じ意味として解釈されます。例えば，次の3つの指定は同じ意味として解釈され，アラート文字（ベル）が3回出力されます。
</span><span class='line'>
</span><span class='line'>    echo -e "\07"
</span><span class='line'>
</span><span class='line'>    echo -e "\007"
</span><span class='line'>
</span><span class='line'>    echo -e "\0007"
</span></code></pre></td></tr></table></div></figure>


<p>ということらしい。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[shpinxでapiのドキュメント生成をする時の注意点]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/29/shpinxdeapifalsedokiyumentosheng-cheng-wosurushi-falsezhu-yi-dian/"/>
    
    <updated>2014-12-29T16:27:27+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/29/shpinxdeapifalsedokiyumentosheng-cheng-wosurushi-falsezhu-yi-dian</id>
    
    <content type="html"><![CDATA[<h1>sphinxとは？</h1>

<p>ドキュメントを作るのがめんどくさい時に利用できるツールでして。</p>

<p>くわしくは<a href="http://sphinx-users.jp/">こっち</a>を見てください。</p>

<h1>この記事の目的</h1>

<p>このsphinxってやつは結構賢くて、有るパッケージ以下を認識させると、それ以下のpythonのパッケージを読み取ってくれて、
ファイルに記述されているコメントからドキュメント生成してくれます。</p>

<p>今回はそのコマンドを利用する際の注意点を幾つか挙げられれば。</p>

<h1>コマンドの利用方法</h1>

<p>インストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pip install sphinx
</span></code></pre></td></tr></table></div></figure>


<p>利用方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#sphinx-apidoc -f -o 出力先ディレクトリ調査対象ディレクトリ</span>
</span><span class='line'><span class="c">#例) app内を調査し、docsに出力する</span>
</span><span class='line'>sphinx-apidoc -f -o docs/ app/
</span></code></pre></td></tr></table></div></figure>


<h1>注意点</h1>

<ol>
<li>config.pyを書き換える</li>
<li>rst記法を学ぶ</li>
<li>__init__.pyが大事</li>
<li>ライブラリから関数をインポートしない</li>
<li>コメント内に章立てを入れない</li>
</ol>


<p>以上の理由を軽く解説します。</p>

<h2>1. config.pyを書き換える</h2>

<p>プロジェクトのルートはインポートするようにしましょう。</p>

<p>ドキュメント生成の際に普通にモジュールをインポートしたりするので、インポートするパスを追加しておかないとドキュメントがきちんと生成されません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;/path/to/project/root&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. rst記法</h2>

<p>意外と面倒で、マークダウンほどのシンプルではありません。</p>

<p><a href="http://www.planewave.org/translations/rst/quickref.html">はやわかり reStructuredText</a></p>

<p>なんだかんだ上記のページで学ぶのが一番しっかりしていて早いと思われます。</p>

<h2>3. __init__.py大事</h2>

<p>ディレクトリでネストしている際は__init__.pyを設置しましょう。</p>

<p>当たり前ですが、置かないとpythonが関連しているディレクトリとして認識されません。</p>

<h2>4. ライブラリから関数をインポートしない</h2>

<p>自分がハマったのですが、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># aというモジュール内でhogeモジュールのHogeクラス functioと言う関数を想定</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">hoge.Hoge</span> <span class="kn">import</span> <span class="n">function</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のようにインポートするとは、インポートした関数(function)を、ドキュメント生成したい(a)モジュール内の関数だと認識し、
aというモジュールのドキュメント内に、functionのドキュメントも生成されます。</p>

<p>(誰得の機能なのだろうか?)</p>

<p>たとえばSQLAlchemyを利用している際に、ralationship関数を読み込んでいるとsphinx-apidocはrelatiohship関数のドキュメントも生成しようとします。</p>

<p>ただし、対象関数のコメントでエラーを吐いて正しくドキュメント生成されません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#relationshipの関数までドキュメント生成される例</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">sqlalchemy</span> <span class="kn">import</span> <span class="n">relationship</span>
</span><span class='line'>
</span><span class='line'><span class="n">relationship</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>回避方法は以下のとおり</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#ドキュメント生成されない例</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sqlalchemy</span> <span class="kn">as</span> <span class="nn">sa</span>
</span><span class='line'>
</span><span class='line'><span class="n">sa</span><span class="o">.</span><span class="n">relationship</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>5. コメント内に章立てを入れない</h2>

<p>ソースコードのコメントで章立てをしないというのは、おそらく既に、モジュール名、クラス名、関数名で章立てができているので不要だからだと思います。</p>

<p>(はっきりと検証していないので不確かですが、)コメント内で章立てをするとエラーが出てまたしてもドキュメント生成されません。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[chefとapacheとphp]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/23/cheftoapachetophp/"/>
    
    <updated>2014-12-23T14:45:15+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/23/cheftoapachetophp</id>
    
    <content type="html"><![CDATA[<h1>問題点</h1>

<p>chefでapacheとphpをインストールした際に、PHPがうまく動かない</p>

<p>PHPの拡張子なのにテキストファイルとして認識される</p>

<h1>ダメだったこと</h1>

<ol>
<li>PHPをインストール後にapacheを再起動しなかったこと</li>
<li>PHPをインストール後に <code>etc/httpd/conf.d/</code> に <code>php.conf</code> を自分で作成してしまったこと</li>
</ol>


<p>1.については有る有るかもしれないが、2については個人的には意外な話だった。</p>

<p>PHPをインストールする際に、apacheの設定用ディレクトリにPHPの設定ファイルを<code>php.conf</code>という名前で設置してくれるようです。</p>

<p>ただ今回私はPHP用のバーチャルホストの設定として個人的に<code>php.conf</code>を設置していて、それが悪影響を及ぼしてました。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Rubyの配列]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/21/rubynohairetu/"/>
    
    <updated>2014-12-21T15:18:47+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/21/rubynohairetu</id>
    
    <content type="html"><![CDATA[<h1>コード</h1>

<div><script src='https://gist.github.com/148fafc067ac58652aa4.js?file=object_verification.rb'></script>
<noscript><pre><code>plain_a = [&#39;fizz&#39;]

plain_b = plane_a

plain_a &lt;&lt; &#39;buzz&#39;

p plain_a
#[&quot;fizz&quot;, &quot;buzz&quot;]

p plain_b
#[&quot;fizz&quot;, &quot;buzz&quot;]

clone_a = [&#39;fizz&#39;]

clone_b = clone_a.clone

clone_a &lt;&lt; &#39;buzz&#39;

p clone_a
#[&quot;fizz&quot;, &quot;buzz&quot;]

p clone_b
#[&quot;fizz&quot;]</code></pre></noscript></div>


<h1>問題点</h1>

<p>AというオブジェクトからBというオブジェクトに値を受け渡しするプログラムを書いているつもりだった。</p>

<p>値を渡しているつもりなので、Aの方で値を変えても、Bの方の値は動くはずないと思っていた。コードでいうところのcloneの方の挙動</p>

<p>しかし、実際にはAの値を変えるとBの方の値も変化する。コードでいうところのplainの方の挙動</p>

<h1>理由</h1>

<p>単純な話で、値を渡しているつもりが参照を渡していた。</p>

<p>「Ruby 配列 コピー」でググると一番上に出てくる<a href="http://www2u.biglobe.ne.jp/~MAS/ruby/C7DBCEF3A4CEA5B3A5D4A1BC.html">リンク</a>にも</p>

<blockquote><p>Array#cloneないしはArray#dupを使います。</p></blockquote>

<p>と書いてある。</p>

<p>この話って多分Ruby特有の話ではないと思うんですけど、実際にハマってみないと分からないもんですね。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[scpより簡単にファイルをローカルに落とす方法]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/13/scpyorijian-dan-nihuairuworokaruniluo-tosufang-fa/"/>
    
    <updated>2014-12-13T16:38:55+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/13/scpyorijian-dan-nihuairuworokaruniluo-tosufang-fa</id>
    
    <content type="html"><![CDATA[<h1>scpとは</h1>

<p>リモートのPCにファイルをアップロードしたり、ダウンロードできるコマンド
基本的にはcpと同じ体系になってると思う。
で、最初のsは多分sshのs</p>

<h1>問題点</h1>

<p>sshの問題点でも有るんだけど、scpのコマンドの問題でも合って、
多段sshをしている時って、ファイルをアップロードしたりダウンロードしたりって結構面倒。
ただでさえコマンドが長くなりがちなのに、「踏み台を一度経由してー」とかやってると日が暮れる。</p>

<h1>解決の仕組み</h1>

<p>webのリンクを踏むとファイルをダウンロードさせる仕組みを使うとリモートからローカルの転送はかなり楽になる。
この方法を応用すると、同じネットワーク内にいる際にこの方法でファイル共有が出来るのかな。</p>

<h1>必要なもの</h1>

<ul>
<li>PHP5.4以上</li>
</ul>


<p>PHP5.4以上にはビルトインサーバーが組み込まれているのでこれを使いたい</p>

<h1>参考</h1>

<p><a href="http://thr3a.hatenablog.com/entry/20131017/1381974853">PHPでユーザーにファイルをダウンロード「させる」方法</a></p>

<h1>方法</h1>

<p>上記のリンクのファイルを作成し、以下のコマンドで起動する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#sample.phpで作成した例, optionはip:ポート番号</span>
</span><span class='line'>php -S 0.0.0.0:5000 sample.php
</span></code></pre></td></tr></table></div></figure>


<p>こうすることで、webサーバーがsample.phpを動かすので気軽にファイルをダウンロードは出来るようになる。</p>

<p>(当然リモート側はアクセスできるようにiptables等の設定が必要です)</p>

<h1>本当は取り組みたかったこと</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>php -S 0.0.0.0:5000 sample.php ファイル名
</span></code></pre></td></tr></table></div></figure>


<p>で任意のファイルをダウンロードさせるスクリプトを作りたかった。</p>

<p>が、コマンドライン引数を受け付けてくれなくて断念した。</p>

<p>コマンドライン引数とかを指定してもipとポート番号と以外無駄。</p>

<h1>他の事例として</h1>

<p>最近python製のマイクロフレームワークのflaskを取り組んでいまして、そっちでも似たようなことをやっていた。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>python app.py 引数
</span></code></pre></td></tr></table></div></figure>


<p>って感じでやるといい感じにwebアプリケーションだけどコマンドライン引数を受け取ってくれてた。</p>

<p>これができちゃうのにはスクリプトからwebサーバーを動かす仕組みになっているからですが。
(つまり、本日、本当にやりたかったことはflaskとpythonがあればできるので、それは後日書きます。)</p>

<h1>結論として</h1>

<p>phpの場合はサーバーの上にスクリプトが存在してて、URLから別ファイルを参照することも(ファイルが存在すると)可能。</p>

<p>python(flask)の場合はスクリプトからwebサーバーを動いているので、そのスクリプト上にルーティングが存在しないとだめ。</p>

<p>両者ともにwebサーバーの機能を実現しているが、仕組みが結構異なるということだと思われる。
この話を突き詰めていくと結構ちゃんとした話になると思うが、何を突っついたらいいのか分からないのが本音。</p>

<p>話がずれたけど以上。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[python3.4のenumでちょっとハマった話]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/10/python3-dot-4falseenumdetiyotutohamatutahua/"/>
    
    <updated>2014-12-10T16:42:20+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/10/python3-dot-4falseenumdetiyotutohamatutahua</id>
    
    <content type="html"><![CDATA[<h1>enumとは</h1>

<p><a href="http://docs.python.jp/3/library/enum.html">列挙型</a>ってやつらしいです。
python3.4から使えるらしいです。</p>

<h1>使い方</h1>

<h2>インポートして直接利用する方法</h2>

<p>第一引数を定義名、第二引数をリストか空白区切りの文字列としEnumの要素とする</p>

<p>以下の方法だと、Aって言うEnum型の定義名にBとCと言う要素を宣言した形となる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">enum</span> <span class="kn">import</span> <span class="n">Enum</span>
</span><span class='line'>
</span><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="n">Enum</span><span class="p">(</span><span class="s">&#39;A&#39;</span><span class="p">,[</span><span class="s">&#39;B&#39;</span><span class="p">,</span><span class="s">&#39;C&#39;</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;main&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">tmp</span> <span class="ow">in</span> <span class="n">hoge</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#出力</span>
</span><span class='line'><span class="c">#B</span>
</span><span class='line'><span class="c">#1</span>
</span><span class='line'><span class="c">#C</span>
</span><span class='line'><span class="c">#2</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">hoge</span><span class="o">.</span><span class="n">B</span><span class="p">)</span>
</span><span class='line'><span class="c"># A.B</span>
</span></code></pre></td></tr></table></div></figure>


<h2>インポートして、Enumを継承して利用する方法</h2>

<p>先ほどとはちょっと異なる定義をします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">enum</span> <span class="kn">import</span> <span class="n">Enum</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Hoge</span><span class="p">(</span><span class="n">Enum</span><span class="p">):</span>
</span><span class='line'>    <span class="n">A</span><span class="o">=</span><span class="s">&#39;a&#39;</span>
</span><span class='line'>    <span class="n">B</span><span class="o">=</span><span class="s">&#39;b&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;main&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">tmp</span> <span class="ow">in</span> <span class="n">Hoge</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#出力</span>
</span><span class='line'><span class="c">#A</span>
</span><span class='line'><span class="c">#a</span>
</span><span class='line'><span class="c">#B</span>
</span><span class='line'><span class="c">#b</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">Hoge</span><span class="o">.</span><span class="n">A</span><span class="p">)</span>
</span><span class='line'><span class="c">#出力</span>
</span><span class='line'><span class="c">#Hoge.A</span>
</span></code></pre></td></tr></table></div></figure>


<h1>何にハマったか</h1>

<p>keyとvalueのシンプルな関係を持たせることが出来るなら、正誤表みたいな使い方が連想配列の代わりにEnumで出来るな！と考えて以下の様な定義と使い方をしてみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">Enum</span> <span class="kn">import</span> <span class="n">enum</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Hoge</span><span class="p">(</span><span class="n">Enum</span><span class="p">):</span>
</span><span class='line'>    <span class="n">A</span><span class="o">=</span><span class="bp">True</span>
</span><span class='line'>    <span class="n">B</span><span class="o">=</span><span class="bp">False</span>
</span><span class='line'>    <span class="n">C</span><span class="o">=</span><span class="bp">True</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;main&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">tmp</span> <span class="ow">in</span> <span class="n">Hoge</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span><span class="p">(</span><span class="n">tmp</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>すると結果は</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#出力</span>
</span><span class='line'><span class="c">#A</span>
</span><span class='line'><span class="c">#True</span>
</span><span class='line'><span class="c">#B</span>
</span><span class='line'><span class="c">#False</span>
</span></code></pre></td></tr></table></div></figure>


<p>何故かCが定義されてない。</p>

<h1>なぜ定義されていないか</h1>

<p>ドキュメントにきちんと書いてありました。</p>

<blockquote><p>ただし、複数の列挙型メンバーが同じ値を持つことはできます。同じ値を持つ 2 つのメンバー A および B (先に定義したのは A) が与えられたとき、B は A の別名になります。A および B を値で調べたとき、A が返されます。B を名前で調べたとき、A が返されます:</p></blockquote>

<p>つまり、同じ値を持っているものは同じ名前だよね？って処理がされます。</p>

<p>上の例ではAとCが両方TrueなのでCの定義はAと同義とみなされたということです。</p>

<p><a href="http://ja.wikipedia.org/wiki/%E5%88%97%E6%8C%99%E5%9E%8B">wikipediaの列挙型</a>のページを見る限りいくつかの定数の集まりとして使うのが正解なのでしょうかね？</p>

<p>列挙型を使うのが初めてで存じ上げませんでした。</p>

<p>ドキュメントをきちんと読まなかったので、ちょっとだけハマった話でした。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[cakePHP3にチャレンジ！]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/05/cakephp3falsetiyutoriarunitiyarenzi!/"/>
    
    <updated>2014-12-05T22:43:30+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/05/cakephp3falsetiyutoriarunitiyarenzi!</id>
    
    <content type="html"><![CDATA[<blockquote><p>この投稿は<a href="http://qiita.com/advent-calendar/2014/cakephp">CakePHP Advent Calendar 2014</a>の6日目の記事です。</p>

<p>5日目:<a href="http://qiita.com/Junkins/items/f3c929102d0b996f15b9">CakePHPでType Hinting！！！::CakePHP Advent(5日目)</a></p></blockquote>

<h1>前提</h1>

<p>現在のcakePHPは <code>2.5.6</code>が安定版、<code>2.6.0</code>がRC、<code>3.0</code>がbeatとしてリリースされています。</p>

<p>cakeの3って、2と何が違うの？という話は、Engine Yardさんの以下の記事がわかりやすいと思うので、そちらを参照してください。</p>

<p><a href="http://www.engineyard.co.jp/blog/2013/cakephp3-preprepreview/">第3回 週末ランサーズにてCakePHP3についての講演をしました</a></p>

<p><a href="http://www.engineyard.co.jp/blog/2014/cakephp3-future-preview/">マドリードで見たCakePHP3の明るい未来 </a></p>

<p>本日はまだ英語版しか無い、cakePHP3のBookmarkerチュートリアルほど取り組みます！</p>

<h1>扱うこと</h1>

<ul>
<li>cakePHP3を始めるにあたって必要なもの</li>
<li>cakePHP3のインストール</li>
<li>プロジェクトの始め方</li>
<li>ちょっとだけカスタマイズ</li>
</ul>


<h1>cake以前の準備</h1>

<p><a href="http://book.cakephp.org/3.0/en/installation.html">Installation</a>と<a href="http://book.cakephp.org/3.0/en/quickstart.html">Quick Start Guide</a>を参考に進めていきます。</p>

<h2>実行環境</h2>

<p>必要なものに以下が指定されています。</p>

<ul>
<li>webサーバー</li>
<li>PHP 5.4.16 以上</li>
<li>mbstring extension</li>
<li>mcrypt extension</li>
<li>intl extension</li>
<li>pdo</li>
<li>DB(後述)</li>
</ul>


<p>DBは以下の内のどれか</p>

<ul>
<li>MySQL 5.1.10以上</li>
<li>PostgreSQL</li>
<li>Microsoft SQL Server 2008以上</li>
<li>SQLite 3</li>
</ul>


<p>まぁつまり、通常のLAMP構成みたいなものがあれば良いのでは無いかと思います。</p>

<p>自分はvagrantを利用して以下を用意しました。</p>

<ul>
<li>centOS6.5</li>
<li>nginx</li>
<li>php5.6</li>
<li>mysql</li>
</ul>


<h2>caekPHPのインストールの準備</h2>

<p>コマンドラインから適当なディレクトリで以下を実行します。</p>

<p>練習ということで、cakePHPを配置したいディレクトリで実行するのがいいと思います。</p>

<p>まず、cakeをインストールするためのcomposerをインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -s https://getcomposer.org/installer <span class="p">|</span> php
</span></code></pre></td></tr></table></div></figure>


<h1>チュートリアル Bookmarker</h1>

<p><a href="http://book.cakephp.org/3.0/en/tutorials-and-examples/bookmarks/intro.html">Bookmarker</a>を作るチュートリアルです。</p>

<p>チュートリアルの概要は、簡易版のソーシャルブックマークを作成しよう！というものです。</p>

<p>サイトに登録したユーザーは、URLを登録する事ができ、そのURLに対してタグを付与することが出来るようになります。</p>

<h2>cakePHP3をcomposerでインストール</h2>

<p>以下を実行するとcakeがインストールされます。</p>

<p>最後の<code>bookmarker</code>ってやつがインストールされるディレクトリ名になります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>php composer.phar create-project --prefer-dist -s dev cakephp/app bookmarker
</span></code></pre></td></tr></table></div></figure>


<p>時間が少々かかります。成功すると標準出力に以下の様なものが表示されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Installing cakephp/app <span class="o">(</span>dev-master 28008873514274db441338eff5e2d07e75274f48<span class="o">)</span>
</span><span class='line'>  - Installing cakephp/app <span class="o">(</span>dev-master master<span class="o">)</span>
</span><span class='line'>      Loading from cache
</span><span class='line'>
</span><span class='line'>Created project in bookmarker
</span><span class='line'>Loading composer repositories with package information
</span><span class='line'>Installing dependencies <span class="o">(</span>including require-dev<span class="o">)</span>
</span><span class='line'>  - Installing cakephp/plugin-installer <span class="o">(</span>0.0.1<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing aura/installer-default <span class="o">(</span>1.0.0<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing nesbot/carbon <span class="o">(</span>1.13.0<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing psr/log <span class="o">(</span>1.0.0<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing aura/intl <span class="o">(</span>1.1.1<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing ircmaxell/password-compat <span class="o">(</span>v1.0.4<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing cakephp/cakephp <span class="o">(</span>3.0.x-dev 0e787e9<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing cakephp/debug_kit <span class="o">(</span>3.0.x-dev 8a6f3da<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing mobiledetect/mobiledetectlib <span class="o">(</span>2.8.11<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>  - Installing d11wtq/boris <span class="o">(</span>v1.0.8<span class="o">)</span>
</span><span class='line'>      Downloading: 100%
</span><span class='line'>
</span><span class='line'>d11wtq/boris suggests installing ext-posix <span class="o">(</span>*<span class="o">)</span>
</span><span class='line'>Writing lock file
</span><span class='line'>Generating autoload files
</span><span class='line'>Created <span class="sb">`</span>config/app.php<span class="sb">`</span> file
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp/cache
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp/cache/models
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp/cache/persistent
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp/cache/views
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp/sessions
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp/tests
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/tmp
</span><span class='line'>Permissions <span class="nb">set </span>on /vagrant/bookmarker/logs
</span><span class='line'>Updated Security.salt value in config/app.php
</span></code></pre></td></tr></table></div></figure>


<p>失敗してるとちゃんとproblemって出るので見落とさないように。</p>

<p>自分の環境(<a href="http://book.cakephp.org/3.0/en/tutorials-and-examples/bookmarks/part-two.html">ここ</a>のCentOS 6.5 x86_64)では <code>php-intl</code> がインストール出来なくてエラーが出てました。最後にちょろっと補足を書いておきます。</p>

<h3>アクセスするとこんな感じ</h3>

<p>2系列の時より綺麗！！！</p>

<p>(だけどまっさらで、必要な情報はもうちょい上に挙げられなかったのかなーなんてね)</p>

<p><img src="http://shouhei.github.io/images/2014/12/5/cake3/cakephp3_top.png" alt="cakephp3 top" /></p>

<h3>ディレクトリ構成</h3>

<p>appがsrcに変わった感じ？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bookmarker
</span><span class='line'>├── README.md
</span><span class='line'>├── bin
</span><span class='line'>├── composer.json
</span><span class='line'>├── composer.lock
</span><span class='line'>├── config
</span><span class='line'>├── index.php
</span><span class='line'>├── logs
</span><span class='line'>├── phpunit.xml.dist
</span><span class='line'>├── plugins
</span><span class='line'>├── src
</span><span class='line'>├── tests
</span><span class='line'>├── tmp
</span><span class='line'>├── vendor
</span><span class='line'>└── webroot
</span></code></pre></td></tr></table></div></figure>


<p>src以下はずいぶんスッキリ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>src
</span><span class='line'>├── Console
</span><span class='line'>├── Controller
</span><span class='line'>├── Model<span class="o">(</span>以下にTable,Entity,Behaviorがあります<span class="o">)</span>
</span><span class='line'>├── Shell
</span><span class='line'>├── Template <span class="o">(</span>2系列までのView相当<span class="o">)</span>
</span><span class='line'>└── View <span class="o">(</span>3系列でViewがオブジェクトになった影響のディレクトリ<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>設定</h2>

<p>まずtmpとかlogsとかの権限をphpが関与できる権限に変更しましょう。</p>

<p>つぎにDBの作成とテーブルの設定。チュートリアルにある、以下をまんま流し込む</p>

<p>今回は面倒かつ練習用なので</p>

<p>ユーザー名 root
パスワード root
作成したDBの名前 bookmarker</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>CREATE TABLE users <span class="o">(</span>
</span><span class='line'>    id INT AUTO_INCREMENT PRIMARY KEY,
</span><span class='line'>    email VARCHAR<span class="o">(</span>255<span class="o">)</span> NOT NULL,
</span><span class='line'>    password VARCHAR<span class="o">(</span>255<span class="o">)</span> NOT NULL,
</span><span class='line'>    created DATETIME,
</span><span class='line'>    updated DATETIME
</span><span class='line'><span class="o">)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>CREATE TABLE bookmarks <span class="o">(</span>
</span><span class='line'>    id INT AUTO_INCREMENT PRIMARY KEY,
</span><span class='line'>    user_id INT NOT NULL,
</span><span class='line'>    title VARCHAR<span class="o">(</span>50<span class="o">)</span>,
</span><span class='line'>    description TEXT,
</span><span class='line'>    url TEXT,
</span><span class='line'>    created DATETIME,
</span><span class='line'>    updated DATETIME,
</span><span class='line'>    FOREIGN KEY user_key <span class="o">(</span>user_id<span class="o">)</span> REFERENCES users<span class="o">(</span>id<span class="o">)</span>
</span><span class='line'><span class="o">)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>CREATE TABLE tags <span class="o">(</span>
</span><span class='line'>    id INT AUTO_INCREMENT PRIMARY KEY,
</span><span class='line'>    title VARCHAR<span class="o">(</span>255<span class="o">)</span>,
</span><span class='line'>    created DATETIME,
</span><span class='line'>    updated DATETIME,
</span><span class='line'>    UNIQUE KEY <span class="o">(</span>title<span class="o">)</span>
</span><span class='line'><span class="o">)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>CREATE TABLE bookmarks_tags <span class="o">(</span>
</span><span class='line'>    bookmark_id INT NOT NULL,
</span><span class='line'>    tag_id INT NOT NULL,
</span><span class='line'>    PRIMARY KEY <span class="o">(</span>bookmark_id, tag_id<span class="o">)</span>,
</span><span class='line'>    INDEX tag_idx <span class="o">(</span>tag_id, bookmark_id<span class="o">)</span>,
</span><span class='line'>    FOREIGN KEY tag_key<span class="o">(</span>tag_id<span class="o">)</span> REFERENCES tags<span class="o">(</span>id<span class="o">)</span>,
</span><span class='line'>    FOREIGN KEY bookmark_key<span class="o">(</span>bookmark_id<span class="o">)</span> REFERENCES bookmarks<span class="o">(</span>id<span class="o">)</span>
</span><span class='line'><span class="o">)</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>でもって、作成したDBの設定をconfig/app.phpに反映</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">#config/app.phpの200行目付近</span>
</span><span class='line'>
</span><span class='line'>        <span class="s1">&#39;Datasources&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>            <span class="s1">&#39;default&#39;</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>                <span class="s1">&#39;className&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Cake\Database\Connection&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;driver&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Cake\Database\Driver\Mysql&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;persistent&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;host&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>                 <span class="cm">/*</span>
</span><span class='line'><span class="cm">                  * CakePHP will use the default DB port based on the driver selected</span>
</span><span class='line'><span class="cm">                  * MySQL on MAMP uses port 8889, MAMP users will want to uncomment</span>
</span><span class='line'><span class="cm">                  * the following line and set the port accordingly</span>
</span><span class='line'><span class="cm">                  */</span>
</span><span class='line'>                 <span class="c1">//&#39;port&#39; =&gt; &#39;nonstandard_port_number&#39;,</span>
</span><span class='line'>                <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="s1">&#39;database&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;bookmarker&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;encoding&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;timezone&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;UTC&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;cacheMetadata&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>                <span class="cm">/*</span>
</span><span class='line'><span class="cm">                 * Set identifier quoting to true if you are using reserved words or</span>
</span><span class='line'><span class="cm">                 * special characters in your table or column names. Enabling this</span>
</span><span class='line'><span class="cm">                 * setting will result in queries built using the Query Builder having</span>
</span><span class='line'><span class="cm">                 * identifiers quoted when creating SQL. It should be noted that this</span>
</span><span class='line'><span class="cm">                 * decreases performance because each query needs to be traversed and</span>
</span><span class='line'><span class="cm">                 * manipulated before being executed.</span>
</span><span class='line'><span class="cm">                 */</span>
</span><span class='line'>                <span class="s1">&#39;quoteIdentifiers&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>                <span class="cm">/*</span>
</span><span class='line'><span class="cm">                 * During development, if using MySQL &lt; 5.6, uncommenting the</span>
</span><span class='line'><span class="cm">                 * following line could boost the speed at which schema metadata is</span>
</span><span class='line'><span class="cm">                 * fetched from the database. It can also be set directly with the</span>
</span><span class='line'><span class="cm">                 * mysql configuration directive &#39;innodb_stats_on_metadata = 0&#39;</span>
</span><span class='line'><span class="cm">                 * which is the recommended value in production environments</span>
</span><span class='line'><span class="cm">                 */</span>
</span><span class='line'>                 <span class="c1">//&#39;init&#39; =&gt; [&#39;SET GLOBAL innodb_stats_on_metadata = 0&#39;],</span>
</span><span class='line'>            <span class="p">],</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スキャッフォルドで色々と生成</h2>

<p>おなじみのスキャッフォルド</p>

<p>bookmarkerとしてcakeをインストールしたディレクトリで以下を叩きます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>php bin/cake.php bake all users
</span><span class='line'>php bin/cake.php bake all bookmarks
</span><span class='line'>php bin/cake.php bake all tags
</span></code></pre></td></tr></table></div></figure>


<p>成功してると最後に以下が表示される</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Bake All complete.
</span></code></pre></td></tr></table></div></figure>


<p>成功したなら以下にアクセス</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>http://example.com/bookmarks
</span></code></pre></td></tr></table></div></figure>


<p>3系ではcakeのデフォはフラットですね。</p>

<p><img src="http://shouhei.github.io/images/2014/12/5/cake3/cake3_bookmarker.png" alt="cake3 bookmarker" /></p>

<p>これだけで、結構な色々な機能が使えるのですが、見れない所がちょいちょい有る。</p>

<p>が、それは後で治すと思うのでとりあえず放置</p>

<p>とりあえず、この後色々試すのにユーザーとタグとブクマのデータを入れて欲しい。
順番もきちんとユーザー、タグ、ブクマで入れると勘違いが起きない。</p>

<h2>パスワードを暗号化させよう</h2>

<p>現状のままだと、ユーザーのパスワードが暗号化されていないので実用性が低いと思われるので。</p>

<p>src/Model/Entity/User.phpに追記していきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;?php
</span><span class='line'>namespace App<span class="se">\M</span>odel<span class="se">\E</span>ntity<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>use Cake<span class="se">\O</span>RM<span class="se">\E</span>ntity<span class="p">;</span>
</span><span class='line'>use Cake<span class="se">\A</span>uth<span class="se">\D</span>efaultPasswordHasher<span class="p">;</span> <span class="c">#追記</span>
</span><span class='line'>/**
</span><span class='line'> * User Entity.
</span><span class='line'> */
</span><span class='line'>class User extends Entity <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>/**
</span><span class='line'> * Fields that can be mass assigned using newEntity<span class="o">()</span> or patchEntity<span class="o">()</span>.
</span><span class='line'> *
</span><span class='line'> * @var array
</span><span class='line'> */
</span><span class='line'>    protected <span class="nv">$_accessible</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>        <span class="s1">&#39;email&#39;</span> <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="s1">&#39;password&#39;</span> <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="s1">&#39;bookmarks&#39;</span> <span class="o">=</span>&gt; <span class="nb">true</span>,
</span><span class='line'>        <span class="o">]</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    protected <span class="k">function</span> _setPassword<span class="o">(</span><span class="nv">$value</span><span class="o">)</span> <span class="o">{</span>  <span class="c">#追記</span>
</span><span class='line'>            <span class="nv">$hasher</span> <span class="o">=</span> new DefaultPasswordHasher<span class="o">()</span><span class="p">;</span> <span class="c">#追記</span>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$hasher</span>-&gt;hash<span class="o">(</span><span class="nv">$valu</span>             <span class="c">#追記</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>(どうでもいいけど、cakeのスキャッフォルド、tab文字で生成されるの凄く気になりませんか？)</p>

<p>これで、Userを編集したり、新しく保存するとユーザーのパスワードが暗号化されるはず。</p>

<p>2系列で使っていたModelは、Model/Entityに移動した形ですかね？
3系列ではModelがオブジェクトを返すようになったらしいので、それに伴い、大きく変更されてるっぽいですね。</p>

<h3>面倒だけど、ドキュメンを読む</h3>

<p><a href="http://book.cakephp.org/3.0/en/orm.html">Model</a>から抜粋</p>

<blockquote><p>In CakePHP your application’s domain model gets split into 2 primary object types. The first are repositories or table objects. These objects provide access to collections of data. They allow you to save new records, modify/delete existing ones, define relations, and perform bulk operations. The second type of objects are entities. Entities represent individual records and allow you to define row/record level behavior &amp; functionality.</p></blockquote>

<p>ざっくり訳すと、modelは２つに別れて、</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> オブジェクト </th>
<th style="text-align:right;"> 役割             </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> table </td>
<td style="text-align:right;"> 新しいデータの保存とか、変更、削除と、リレーションの定義 </td>
</tr>
<tr>
<td style="text-align:left;"> entities</td>
<td style="text-align:right;"> 独立したレコードの表示や、行の振る舞いや関数の定義</td>
</tr>
</tbody>
</table>


<p>つまり、tableはデータを弄る系とリレーション、entitiesはデータの利用ってことでいいのかな？</p>

<h3>ついでにViewがどう変わったのかも確認する</h3>

<p><a href="http://book.cakephp.org/3.0/en/appendices/3-0-migration-guide.html">3.0 Migration Guide</a>がわかりやすそう</p>

<blockquote><p>The folders containing view files now go under src/Template instead of src/View. This was done to separate the view files from files containing php classes (eg. Helpers, View classes).</p></blockquote>

<p>いままでのViewがTemplateに変わったとの事。</p>

<p>cake3ではViewもオブジェクトになったからだと思われる。</p>

<p>でもって、Viewのオブジェクトで色々と設定が出来るようになった？って感じかな。</p>

<h2>タグ付けされてるブックマークを探したいよね。</h2>

<p>たとえば</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>http://example.com/bookmarks/tagged/funny/cat/gifs
</span></code></pre></td></tr></table></div></figure>


<p>以上だと、funnyとかタグ付けされてるやつブクマが分かることを期待する。</p>

<p>この機能を実現するために、以下の手順を通して行う。</p>

<ol>
<li>config/routes.phpを編集</li>
<li>src/Controller/BookmarksController.phpの編集</li>
<li>src/Model/Table/BookmarksTable.phpの編集</li>
<li>Template/Bookmarks/tags.ctpの追加</li>
</ol>


<h3>まず、config/routes.phpを編集</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">＃URLのbookmarks以下でtaggedにマッチしたら、BookmarksControllersのtagsメソッドにアクセス</span>
</span><span class='line'><span class="nx">Router</span><span class="o">::</span><span class="na">scope</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;/bookmarks&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">[</span><span class="s1">&#39;controller&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Bookmarks&#39;</span><span class="p">],</span>
</span><span class='line'>        <span class="k">function</span> <span class="p">(</span><span class="nv">$routes</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$routes</span><span class="o">-&gt;</span><span class="na">connect</span><span class="p">(</span><span class="s1">&#39;/tagged/*&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;action&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;tags&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上を、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Router</span><span class="o">::</span><span class="na">scope</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">,</span><span class="c1">#以下略</span>
</span></code></pre></td></tr></table></div></figure>


<p>が出てくる前に記述する。</p>

<p>記述しないと、<code>/</code> が追記したものより先にマッチして思うようにアクセス出来ない。</p>

<h3>コントローラーの編集</h3>

<p>routesに追記したのはBookmarksControllersのtagsにアクセスと書いたが、まだ無いので追記。
位置は基本的に気にしなくていい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">tags</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$tags</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">params</span><span class="p">[</span><span class="s1">&#39;pass&#39;</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">#findの第一引数のtaggedが、ModelのfindTaggedに関連づいている</span>
</span><span class='line'>    <span class="nv">$bookmarks</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">Bookmarks</span><span class="o">-&gt;</span><span class="na">find</span><span class="p">(</span><span class="s1">&#39;tagged&#39;</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>                <span class="s1">&#39;tags&#39;</span> <span class="o">=&gt;</span> <span class="nv">$tags</span>
</span><span class='line'>                <span class="p">]);</span>
</span><span class='line'>    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">set</span><span class="p">(</span><span class="nb">compact</span><span class="p">(</span><span class="s1">&#39;bookmarks&#39;</span><span class="p">,</span> <span class="s1">&#39;tags&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>モデルの編集</h3>

<p>チュートリアルには、コントローラーを薄く保つために、モデルにロジックを記述するんだ！とか書いてある。</p>

<p>結果として、より規約を意識する形になったと思う。</p>

<p>コードのコメントにも書いたが、Controller内のModel呼び出しで、<code>find('tagged'〜</code>のところが、findTaggedと結びついている。</p>

<p>Model/Table/BookmarksTable.phpに以下を追記</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">findTagged</span><span class="p">(</span><span class="nx">Query</span> <span class="nv">$query</span><span class="p">,</span> <span class="k">array</span> <span class="nv">$options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$fields</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>            <span class="s1">&#39;Bookmarks.id&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;Bookmarks.title&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;Bookmarks.url&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">find</span><span class="p">()</span>
</span><span class='line'>                <span class="o">-&gt;</span><span class="na">distinct</span><span class="p">(</span><span class="nv">$fields</span><span class="p">)</span>
</span><span class='line'>                <span class="o">-&gt;</span><span class="na">matching</span><span class="p">(</span><span class="s1">&#39;Tags&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$q</span><span class="p">)</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="nv">$q</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">([</span><span class="s1">&#39;Tags.title IN&#39;</span> <span class="o">=&gt;</span> <span class="nv">$options</span><span class="p">[</span><span class="s1">&#39;tags&#39;</span><span class="p">]]);</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Templateの追加</h3>

<p>Controllerにメソッドを追加したら、Templateも追加しましょう。</p>

<p>/Template/Bookmarks/tags.ctpに以下を記述して保存</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Bookmarks tagged with <span class="cp">&lt;?= $this-&gt;Text-&gt;toList($tags) ?&gt;</span> <span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="cp">&lt;?php foreach ($bookmarks as $bookmark): ?&gt;</span>
</span><span class='line'>        <span class="nt">&lt;article&gt;</span>
</span><span class='line'>            <span class="nt">&lt;h4&gt;</span><span class="cp">&lt;?= $this-&gt;Html-&gt;link($bookmark-&gt;title, $bookmark-&gt;url) ?&gt;</span><span class="nt">&lt;/h4&gt;</span>
</span><span class='line'>            <span class="nt">&lt;small&gt;</span><span class="cp">&lt;?= h($bookmark-&gt;url) ?&gt;</span><span class="nt">&lt;/small&gt;</span>
</span><span class='line'>            <span class="cp">&lt;?= $this-&gt;Text-&gt;autoParagraph($bookmark-&gt;description) ?&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/article&gt;</span>
</span><span class='line'>    <span class="cp">&lt;?php endforeach; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>全て終えると</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>http://example.com/bookmarks/tagged/hogehoge
</span></code></pre></td></tr></table></div></figure>


<p>にアクセスするとhogehogeとタグ付けされた本がリストアップされる。</p>

<p>スクショは、予めブクマしたものにプログラミングとタグ付けをしてURLにアクセスしたもの。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>http://example.com/bookmarks/tagged/プログラミング
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://shouhei.github.io/images/2014/12/5/cake3/cake3_tagged.png" alt="cake3 tagged" /></p>

<p>寂しいけどこんな感じ。
これでbookmarkerチュートリアルは終了。</p>

<h1>cake3の感想</h1>

<p>結構色々変わった！というのがチュートリアルを終えての印象。</p>

<p>cake2の頃も結構規約を意識しなければならなかったが、更に規約を意識してプログラムを書かなければと思う。</p>

<p>cake慣れていれば問題ないけど、初心者とかは結構詰まるのではないかな？</p>

<p>ModelとViewが更に大きく変わっていると思うけれど、今回のチュートリアルでは構成と役割が分割されたくらいしかわからないので、次回に持越し。</p>

<p>とりあえず、正式にリリースされたら、新規で作るものに関しては使っていきたいと思う。
これだけの変更があると、マイグレーションツールとかがどの位通用するのかとかも気になる所。</p>

<hr />

<p>想像以上に長くなったので、とりあえず本日の記事は以上にします。
近いうちに<a href="http://book.cakephp.org/3.0/en/tutorials-and-examples/bookmarks/part-two.html">Bookmarkarチュートリアル2</a>に取り組む記事もあげる予定です。</p>

<p>cakePHP3のチュートリアルの足掛かりになればと思います。</p>

<h1>補足</h1>

<p>php-intlがインストールできて無かった話</p>

<p>libicudata.so.50()(64bit)が無いと言われたので</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>wget ftp://195.220.108.108/linux/remi/enterprise/6/remi/x86_64/libicu-last-50.1.2-11.el6.remi.x86_64.rpm
</span><span class='line'>rpm -iV libicu-last-50.1.2-11.el6.remi.x86_64.rpm
</span><span class='line'>yum -y install --enablerepo<span class="o">=</span>remi-php56 php-intl
</span></code></pre></td></tr></table></div></figure>


<p>って感じでインストールした。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[octopressのシンタックスハイライト]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/04/octopressfalsesintatukusuhairaito/"/>
    
    <updated>2014-12-04T17:05:42+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/04/octopressfalsesintatukusuhairaito</id>
    
    <content type="html"><![CDATA[<p>このブログはoctopressってやつで運営しているんです。</p>

<h1>octopressとは</h1>

<p>octopressは静的ファイルで運営するブログでして、本文をマークダウンで記述出来て、さくっとコードの埋め込みとかも出来ます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['hogehoge']
</span><span class='line'>
</span><span class='line'>rake preview
</span><span class='line'>
</span><span class='line'>rake gen_deploy</span></code></pre></td></tr></table></div></figure>


<p>の一連で記事を更新できます。</p>

<h1>シンタックスハイライトが無効問題</h1>

<p>コードを埋め込んでシンタックスハイライトを期待する文章で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>を叩くと</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jekyll 2.5.1 | Error:  Pygments can't parse unknown language: php.</span></code></pre></td></tr></table></div></figure>


<p>とかでる。</p>

<p>でもってシンタックスハイライト有効にならない。</p>

<h1>問題点</h1>

<p>stackoverflowに出てました。
<a href="https://github.com/imathis/octopress/issues/117">ここ</a></p>

<p>つまり、python2.7でないとダメらしく、自分の環境のpythonは3.4.0だからっぽい。</p>

<h1>解決方法</h1>

<p>自分の環境はmacにpyenvがインストールされているので、octopressのディレクトリ内では2.7が動くように指定しました。</p>

<p>macのシステムで利用しているpythonは2.7だと思うので</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pyenv local system</span></code></pre></td></tr></table></div></figure>


<p>以上をoctopressの設置しているディレクトリ内で叩くことにより、シンタックスハイライトが有効になりました。</p>

<p>めでたしめでたし。</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[python3のisとかinとnotの話]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/02/python3falseistokaintonotfalsehua/"/>
    
    <updated>2014-12-02T12:44:50+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/02/python3falseistokaintonotfalsehua</id>
    
    <content type="html"><![CDATA[<p>要は論理否定演算子の話</p>

<h2>PHP</h2>

<p>PHPでは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$hoge</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="p">,</span><span class="s1">&#39;B&#39;</span><span class="p">,</span><span class="s1">&#39;C&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span> <span class="o">!</span><span class="nb">is_array</span><span class="p">(</span><span class="nv">$hoge</span><span class="p">)</span> <span class="p">){</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>とか</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$hoge</span> <span class="o">=</span> <span class="s2">&quot;A&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nv">$hoge</span> <span class="o">!=</span> <span class="s2">&quot;A&quot;</span><span class="p">){</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>とかで、<code>!</code> を論理否定演算子に使う。</p>

<h2>Python</h2>

<p>だが、Pythonでは<code>not</code>を利用して論理否定を表現する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'><span class="n">hoge</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span>
</span></code></pre></td></tr></table></div></figure>


<p>とか</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;1&#39;</span><span class="p">,</span><span class="s">&#39;2&#39;</span><span class="p">,</span><span class="s">&#39;3&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="s">&#39;1&#39;</span> <span class="ow">in</span> <span class="ow">not</span> <span class="n">hoge</span>
</span></code></pre></td></tr></table></div></figure>


<p>で表現する。</p>

<h3>補足1</h3>

<p>pythonだと</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;1&#39;</span><span class="p">,</span><span class="s">&#39;2&#39;</span><span class="p">,</span><span class="s">&#39;3&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="ow">not</span> <span class="s">&#39;1&#39;</span> <span class="ow">in</span> <span class="n">hoge</span>
</span></code></pre></td></tr></table></div></figure>


<p>とか表現できるけど、こっちの方だと、pytestとかで警告が出る。</p>

<h3>補足2</h3>

<p>確認する際は<code>php -a</code>か、<code>ipythob</code>を利用して確認すると良い。</p>

<p>ただしphp -a は環境によっては使えないことと、Trueを1、Falseを出力なしで表現することに注意</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[はじめてみる]]></title>
    <link href="http://shouhei.github.io/blog/2014/12/01/hazimetemiru/"/>
    
    <updated>2014-12-01T12:03:20+09:00</updated>
    <id>http://shouhei.github.io/blog/2014/12/01/hazimetemiru</id>
    
    <content type="html"><![CDATA[<p>どこまで続くかわからないですけど。
始めてみます。
プログラミングetcのはなしです。</p>
]]></content>
    
  </entry>
  
</feed>